<?xml version="1.0" encoding="utf-8"?>
<ehs:EHSTool xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx" 
				   xmlns:ui="weave.ui.*" 
				   xmlns:ehsUi="ehs.ui.*"  
				   xmlns:ehs="ehs.*"
				   implements="weave.api.core.ILinkableObject,weave.api.ui.IVisTool" 
				   title="Inspection Tool" 
				   xmlns:editors="ehs.ui.editors.*">
	
	<ehsUi:CustomPanel id="formPanel" left="10" right="10" bottom="10" top="10" creationPolicy="all"   >
		<!--<ui:TabLinkableLayoutManager id="manager" width="100%" height="100%"/>-->
		<!--<s:HGroup width="100%" height="100%" gap="0"  >
			<s:Group height="100%" >
				<s:Rect left="0" right="0" top="0" bottom="0">
					<s:fill><s:SolidColor id="menuBgFill"   color="0x36373b" /></s:fill>					
				</s:Rect>dd
				<s:ButtonBar skinClass="ehs.ui.skins.EhsButtonBarSkin" id="pageMenu" dataProvider="{linkData}" change="pageMenu_changeHandler(event)"  />				
			</s:Group>
			<s:Group  width="100%" height="100%" >				
				<s:Rect left="0" right="0" top="0" bottom="0">
					<s:fill><s:SolidColor id="bgFill" color="0x202425" /></s:fill>					
				</s:Rect>
				<s:Scroller left="8" right="4" top="4" bottom="4" verticalScrollPolicy="auto" 
							horizontalScrollPolicy="auto" >
					<s:Group id="formSection"  height="100%" minWidth="0" minHeight="0" width="100%">
						
					</s:Group>
				</s:Scroller>
			</s:Group>
		
		</s:HGroup>-->
	</ehsUi:CustomPanel>
	<fx:Script>
		<![CDATA[
			import flash.utils.ByteArray;
			
			import mx.core.IVisualElement;
			
			import ehs.data.SurveySection;
			
			import weave.Weave;
			import weave.api.newLinkableChild;
			import weave.api.registerLinkableChild;
			import weave.api.ui.ILinkableLayoutManager;
			import weave.api.ui.IVisTool;
			import weave.core.LinkableString;
			import weave.core.UIUtils;
			import weave.data.DataSources.CSVDataSource;
			import weave.ui.TabLinkableLayoutManager;
			import weave.visualization.layers.SurveyManager;
			import weave.visualization.plotters.SurveyPloter;
			
			WeaveAPI.ClassRegistry.registerImplementation(IVisTool, SurveyTool, "Survey Tool");
			
			
			public const plotManager:SurveyManager = newLinkableChild(this, SurveyManager);

			
			/**
			 * A constructor cannot be defined in MXML.
			 * This function gets called as a result of calling the super class's constructor.
			 * Classes that extend DraggablePanel can override this and call super.inConstructor().
			 * Any code that should execute in the constructor can be put into this function.
			 * This function should not be called directly.
			 */
			override protected function inConstructor():void
			{
				super.inConstructor();
				
				//formPlotter.sections.childListCallbacks.addGroupedCallback(this,createSectionUI);
				currentPage.addImmediateCallback(this,openSection,false, true);
					
			}
			
			
			
			
			
			// later give user the option to load CSV and design the UI based on that
			[Embed(source="/../ehs/surveySource.txt",mimeType="application/octet-stream")]
			private var csvSource:Class;				
			private var csvAsBytes:ByteArray;				
			public function loadDefaultCSV():void{
				if(!csvAsBytes){
					csvAsBytes = new csvSource();
				}
				var arr:Array = WeaveAPI.CSVParser.parseCSV(csvAsBytes.readUTFBytes(csvAsBytes.length));
				
				formHeaders = WeaveAPI.CSVParser.getRecordFieldNames(arr);
				var uniqueFormName:String = "FormDataSource";
				var uniqueName:String = Weave.root.generateUniqueName(uniqueFormName);
				csvDataSource = Weave.root.requestObject(uniqueName,CSVDataSource, false);
				csvDataSource.csvData.setSessionState(arr);
				csvDataSource.keyType.value = uniqueName;
				csvDataSource.keyColName.value = 'key';
				
				hardCodeMetaData();
				
			}
			
			//public const formPlotter:FormPlotter = registerLinkableChild(this, new FormPlotter());
			
			
			
			public const currentPage:LinkableString = registerLinkableChild(this, new LinkableString());
			public const layoutMode:LinkableString = registerLinkableChild(this, new LinkableString("tab"));
			private var manager:ILinkableLayoutManager;
			
			override protected function createChildren():void{					
				super.createChildren();
				
				manager = newLinkableChild(this, TabLinkableLayoutManager);				
								
				formPanel.addElement(manager as IVisualElement);
				panelTitle.value = "Survey Tool";
				
				loadDefaultCSV();
				UIUtils.linkLayoutManager(manager,plotManager.surveySectionUIs);
				(manager as TabLinkableLayoutManager).activeSection = currentPage;
				(manager as TabLinkableLayoutManager).layoutMode = layoutMode;
				
			}
			
			private var csvDataSource:CSVDataSource = null;
			private var formHeaders:Array = null;
			
			private function hardCodeMetaData():void{
				
				
				csvDataSource.putColumn(1,plotManager.plotter.sectionColumn);
				csvDataSource.putColumn(2,plotManager.plotter.questionColumn);
				//csvDataSource.putColumn(3,formPlotter.answerColumn);
				//csvDataSource.putColumn(4,formPlotter.answerTypeColumn);
				//csvDataSource.putColumn(5,formPlotter.dependentColumn);
			}
			
			
			// ---  Section creation --- ///
			
			private var sectionRenderer:String;
			private var checkListRenderer:String;
			
			
			private function openSection():void{
				if(currentPage.value){
					var	sectionName:String = currentPage.value;
					 plotManager.sections.requestObject(sectionName,SurveySection,false);
					//sec.sectionData.structure = {comment:"Hi", images:null};
					//sec.secData.value = {comment:"Hi", images:null};
					
				}
				
			}
			
			
			
			
			
			
			
			
			internal function get plotter():SurveyPloter { return plotManager.plotter as SurveyPloter; }
		
			
			
			
			
		]]>
	</fx:Script>
	<ehs:editorFactory>
		<fx:Component>
			<ui:ControlPanel>
				<fx:Script>
					<![CDATA[
						import mx.collections.ArrayCollection;
						
						import ehs.EHSTool;
						
						import weave.api.linkBindableProperty;
						import weave.visualization.plotters.SurveyPloter;
						
						[Bindable]
						public var layoutData:ArrayCollection = new ArrayCollection(['tab','wizard','tile']);
						
						override protected function childrenCreated():void
						{
							super.childrenCreated();
							
							
							
							var surPlotter:SurveyPloter = (outerDocument.plotter as SurveyPloter);
							surPlotter.sectionColumn.addGroupedCallback(this, handleSectionColumnChange, true);
						}
						
						private function handleSectionColumnChange():void
						{
							if (!parent)
								return callLater(handleSectionColumnChange);
							
							
							
							binEditor.setTarget(outerDocument.plotter.binnedSection);
							dataColumnComponent.dynamicObject = outerDocument.plotter.sectionColumn;
						}
						
						]]>
				</fx:Script>
				<s:NavigatorContent label="{lang('Basic')}">
					<s:layout>
						<s:VerticalLayout/>
					</s:layout>
					<ui:DynamicColumnComponent id="dataColumnComponent" label="{lang('Section')}"/>
					<ui:BinningDefinitionEditor id="binEditor"/>
					
				</s:NavigatorContent>
				<s:NavigatorContent label="{lang('Form')}">
					<s:layout>
						<s:FormLayout/>
					</s:layout>
					<s:Form>
						<s:FormItem label="Layout">
							<s:DropDownList dataProvider="{layoutData}" creationComplete="linkBindableProperty(outerDocument.layoutMode,event.target,'selectedItem');" />							
						</s:FormItem>
						
					</s:Form>
				</s:NavigatorContent>
				
				<editors:ToolSettingsEditor id="toolEditor" width="100%" creationComplete="toolEditor.setTarget(outerDocument as EHSTool)"/>
				
			</ui:ControlPanel>
		</fx:Component>
	</ehs:editorFactory>
	
	
</ehs:EHSTool>
